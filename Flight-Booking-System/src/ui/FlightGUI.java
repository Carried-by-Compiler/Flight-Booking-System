/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import business_layer.Flight;
import business_layer.FlightsManager;
import java.awt.Color;
import java.awt.event.ActionListener;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author John Rey Juele
 */
public class FlightGUI extends JFrame {
    
    
    private DefaultTableModel tbDepartModel;
    private DefaultTableModel tbReturnModel;
    
    /**
     * Creates new form FlightsSearch
     */
    public FlightGUI() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlightGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlightGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlightGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlightGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        
        
        initComponents();
        
        this.tbDepartModel = (DefaultTableModel) this.departFlightTable.getModel();
        this.tbReturnModel = (DefaultTableModel) this.returnFlightTable.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup10 = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        departFlightTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        departTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        arrivalTextField = new javax.swing.JTextField();
        departDateLabel = new javax.swing.JLabel();
        directRB = new javax.swing.JRadioButton();
        noStopRB = new javax.swing.JRadioButton();
        submitButton = new javax.swing.JButton();
        dateCB = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        monthCB = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        yearCB = new javax.swing.JComboBox<>();
        oneWayRB = new javax.swing.JRadioButton();
        returnRB = new javax.swing.JRadioButton();
        returnDateLabel = new javax.swing.JLabel();
        rDateCB = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        rMonthCB = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        rYearCB = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        returnFlightTable = new javax.swing.JTable();
        submitSelection = new javax.swing.JButton();
        infoButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search Flights");
        setResizable(false);

        departFlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airline(s)", "Depart Time", "Arrival Time", "# of Stops", "Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(departFlightTable);

        jLabel1.setText("From:");

        departTextField.setColumns(20);
        departTextField.setToolTipText("Departing City");

        jLabel2.setText("To:");

        arrivalTextField.setColumns(20);

        departDateLabel.setText("Depart Date:");

        buttonGroup10.add(directRB);
        directRB.setText("Direct Flights");

        buttonGroup10.add(noStopRB);
        noStopRB.setSelected(true);
        noStopRB.setText("With stops");
        noStopRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noStopRBActionPerformed(evt);
            }
        });

        submitButton.setText("Search Flights");
        submitButton.setToolTipText("Submit form");

        dateCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dateCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateCBActionPerformed(evt);
            }
        });

        jLabel4.setText("/");

        monthCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MMM", "Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.", "Oct.", "Nov.", "Dec." }));

        jLabel5.setText("/");

        yearCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY" }));

        buttonGroup1.add(oneWayRB);
        oneWayRB.setText("One way");

        buttonGroup1.add(returnRB);
        returnRB.setSelected(true);
        returnRB.setText("Return");

        returnDateLabel.setText("Return Date:");

        rDateCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DD", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel7.setText("/");

        rMonthCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MMM", "Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.", "Oct.", "Nov.", "Dec." }));

        jLabel8.setText("/");

        rYearCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "YYYY" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arrivalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(departTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(departDateLabel)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(rDateCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel7)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(rMonthCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel8)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(rYearCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(submitButton))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(dateCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel4)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(monthCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel5)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(yearCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(returnDateLabel))
                                    .addGap(40, 40, 40)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(directRB)
                                        .addComponent(noStopRB))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(returnRB)
                                        .addComponent(oneWayRB)))))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(departDateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(departTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(monthCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(yearCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(returnDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(arrivalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rDateCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)
                                .addComponent(rMonthCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8)
                                .addComponent(rYearCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(directRB)
                            .addComponent(oneWayRB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(noStopRB)
                            .addComponent(returnRB))
                        .addGap(18, 18, 18)
                        .addComponent(submitButton)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel3.setText("Departing Flights");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel6.setText("Returning Flights");

        returnFlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airline(s)", "Depart Time", "Arrival Time", "# of Stops", "Cost"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(returnFlightTable);

        submitSelection.setText("Purchase");
        submitSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitSelectionActionPerformed(evt);
            }
        });

        infoButton.setText("More Info");
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel6)
                    .addComponent(jSeparator2)
                    .addComponent(jScrollPane2))
                .addContainerGap(63, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(infoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(submitSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(289, 289, 289))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitSelection)
                    .addComponent(infoButton))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitSelectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_submitSelectionActionPerformed

    private void dateCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateCBActionPerformed

    private void noStopRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noStopRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noStopRBActionPerformed

    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_infoButtonActionPerformed

    
    public void display() {
        this.setVisible(true);
    }
    
    public void addButtonListener(ActionListener buttonPressListener) {
        submitButton.addActionListener(buttonPressListener);
        oneWayRB.addActionListener(buttonPressListener);
        returnRB.addActionListener(buttonPressListener);
        submitSelection.addActionListener(buttonPressListener);
        infoButton.addActionListener(buttonPressListener);
    }
    
    public String getDeparture() {
        return this.departTextField.getText();
    }
    
    public String getArrival() {
        return this.arrivalTextField.getText();
    }
    
    public String[] getDepartDate() {
        String day = String.valueOf(this.dateCB.getSelectedItem());
        String month = String.valueOf(this.monthCB.getSelectedItem());
        String year = String.valueOf(this.yearCB.getSelectedItem());
        
        String[] date = {day, month, year};
        
        return date;
    }
    
    public String[] getReturnDate() {
        String date[] = new String[3];
        
        if(this.rDateCB.isEnabled() && this.rMonthCB.isEnabled() && this.rYearCB.isEnabled()) {
            String day = String.valueOf(this.rDateCB.getSelectedItem());
            String month = String.valueOf(this.rMonthCB.getSelectedItem());
            String year = String.valueOf(this.rYearCB.getSelectedItem());
        
            date[0] = day; date[1] = month; date[2] = year;
        } else {
            date[0] = ""; date[1] = ""; date[2] = "";
        }
        
        return date;
    }
    
    public String getFlightMethodChoice() {
        String selected = "";
        
        if(directRB.isSelected()) {
            selected = "DIRECT";
        } else if (noStopRB.isSelected()) {
            selected = "MULTIPLE";
        }
        
        return selected;
    }
    
    public String getFlightReturnMethod() {
        String selected = "";
        
        if(oneWayRB.isSelected()) {
            selected = "ONEWAY";
        } else if(returnRB.isSelected()) {
            selected = "RETURN";
        }
        
        return selected;
    }
    
    public void error(String errorMessage) {
        
        switch(errorMessage) {
            case "DATE":
                this.departDateLabel.setText("Please enter a valid date");
                this.departDateLabel.setForeground(Color.red);
                break;
            case "DEPARTURE":
                this.departTextField.setForeground(Color.red);
                this.departTextField.setText("Please enter departure");
                break;
            case "RDATE":
                this.returnDateLabel.setText("Please enter a valid date");
                this.returnDateLabel.setForeground(Color.red);
                break;
            case "ARRIVAL":
                this.arrivalTextField.setText("Please enter a destination");
                this.arrivalTextField.setForeground(Color.red);
                break;
            case "NOFLIGHTS":
                JOptionPane.showMessageDialog(this, "No Flights Found!", "No Flights", JOptionPane.INFORMATION_MESSAGE);
                break;
        }
    }
    
    public void setYearComboBox(int[] years) {
        for(int i = 0; i < years.length; i++) {
            this.yearCB.addItem(String.valueOf(years[i]));
            this.rYearCB.addItem(String.valueOf(years[i]));
        }
    }
    
    public void setRBEnable(boolean set) {
        this.rDateCB.setEnabled(set);
        this.rMonthCB.setEnabled(set);
        this.rYearCB.setEnabled(set);
    }
    
    /**
     * Fills the depart table of flights.
     * @param row The data row to output to the table.
     */
    public void fillDepartTable(Object[] row) {
        this.tbDepartModel.addRow(row);
    }
    
    /**
     * Fills the return table of flights.
     * @param row The data row to output to the table.
     */
    public void fillReturnTable(Object[] row) {
        this.tbReturnModel.addRow(row);
    }
    
    public int[] getSelectedRows() {
        int arrRow = -1;
        System.out.println("Selected Rows");
        int [] flightsInfo = new int[2];
        int depRow = this.departFlightTable.getSelectedRow();

        boolean isEmpty = this.returnFlightTable.getSelectionModel().isSelectionEmpty();
         
        if(!isEmpty) {
            arrRow = this.returnFlightTable.getSelectedRow();
        } else {
            arrRow = -1;
        }
       
        
         flightsInfo[0] = depRow;
         flightsInfo[1] = arrRow;
         return flightsInfo;
    }
    
    
    /**
     * Clear all info from the flights table.
     */
    public void clearTable() {
        
        DefaultTableModel model = (DefaultTableModel) this.departFlightTable.getModel();
        model.setRowCount(0);
        model = (DefaultTableModel) this.returnFlightTable.getModel();
        model.setRowCount(0);
        this.revalidate();
    }
    
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField arrivalTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.JComboBox<String> dateCB;
    private javax.swing.JLabel departDateLabel;
    private javax.swing.JTable departFlightTable;
    private javax.swing.JTextField departTextField;
    private javax.swing.JRadioButton directRB;
    private javax.swing.JButton infoButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox<String> monthCB;
    private javax.swing.JRadioButton noStopRB;
    private javax.swing.JRadioButton oneWayRB;
    private javax.swing.JComboBox<String> rDateCB;
    private javax.swing.JComboBox<String> rMonthCB;
    private javax.swing.JComboBox<String> rYearCB;
    private javax.swing.JLabel returnDateLabel;
    private javax.swing.JTable returnFlightTable;
    private javax.swing.JRadioButton returnRB;
    private javax.swing.JButton submitButton;
    private javax.swing.JButton submitSelection;
    private javax.swing.JComboBox<String> yearCB;
    // End of variables declaration//GEN-END:variables
}
